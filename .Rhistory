"learner_toilet_ratio_girls_public",
"learner_toilet_ratio_boys_private",
"learner_toilet_ratio_girls_private")) %>%
pivot_longer(cols = -county,
names_to = "type",
values_to = "learner_toilet_ratio") %>%
mutate(grade = "primary",
sex_modifier = ifelse(str_detect(type, "boys"), "boys", "girls"),
public_private = ifelse(str_detect(type, "public"), "public", "private")) %>%
select(county, grade, sex_modifier, learner_toilet_ratio, public_private),
read_excel("./data/ocr_tables/pupil_toilet_ratio_secondary.xlsx") %>%
clean_names() %>%
select(-toilets_boys_public, -toilets_girls_public,
-toilets_boys_private, -toilets_girls_private) %>%
pivot_longer(cols = -county,
names_to = "type",
values_to = "learner_toilet_ratio") %>%
mutate(grade = "secondary",
sex_modifier = ifelse(str_detect(type, "boys"), "boys", "girls"),
public_private = ifelse(str_detect(type, "public"), "public", "private")) %>%
select(county, grade, sex_modifier, learner_toilet_ratio, public_private)
) %>%
rename(age_modifier = grade) %>%
mutate(county = case_when(county == "Kish" ~ "Kisii",
TRUE ~ county))
public_enrolment <- enrolment %>%
filter(public_private == "public" & !str_detect(grade, "total")) %>%
group_by(county, sex_modifier, age_modifier) %>%
summarise(enrolment = sum(enrolment))
learner_toilet_ratio_recalculated <- rbind(
learner_toilet_ratio %>%
mutate(county = str_trim(county)) %>%
filter(public_private == "public") %>%
left_join(public_enrolment,
by = c("county" = "county",
"sex_modifier" = "sex_modifier",
"age_modifier" = "age_modifier")) %>%
mutate(toilets = (enrolment / learner_toilet_ratio)) %>%
group_by(county, age_modifier) %>%
summarise(enrolment = sum(enrolment),
toilets = sum(toilets)) %>%
mutate(learner_toilet_ratio = enrolment / toilets,
sex_modifier = "total"),
learner_toilet_ratio %>%
mutate(county = str_trim(county)) %>%
filter(public_private == "public") %>%
left_join(public_enrolment,
by = c("county" = "county",
"sex_modifier" = "sex_modifier",
"age_modifier" = "age_modifier")) %>%
mutate(toilets = (enrolment / learner_toilet_ratio)) %>%
select(county, age_modifier, sex_modifier, enrolment, toilets, learner_toilet_ratio))
learner_toilet_ratio_recalculated
asal_county_list <- counties %>% distinct(county) %>% pull()
counties %>%
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
count(indicator)
135 / 14
counties %>%
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
filter(indicator == "learner_toilet_ratio_recalculated")
135 / 13
135 - 3
132 / 14
132 / 13
library(flexdashboard)
library(tidyverse)
library(viridis)
library(readxl)
library(sf)
library(scales)
library(patchwork)
library(janitor)
library(flextable)
library(grid)
library(png)
library(cowplot)
library(ggpubr)
library(ggtext)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total")),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio))
pie_chart <- function(tbl){
tbl %>%
mutate(prop = value / sum(value)) %>%
mutate(label = str_to_title(sex_modifier)) %>%
ggplot(aes(x ="", y = prop, fill = sex_modifier)) +
geom_col(width = 1, colour = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_label(aes(y = prop,
label = paste0(label, "\n",
comma(value),
"\n",
percent(prop, accuracy = .1))),
colour = "white",
position = position_stack(vjust = .5),
size = 5) +
scale_fill_manual(values = c( "#4d6bbd", "#ed6b24")) +
theme(legend.position = "none",
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 30,
colour = "#5370BF"))
}
make_dodged_plot <- function(tbl) {
tbl %>%
mutate(age_modifier = str_to_title(age_modifier),
age_modifier = str_replace_all(age_modifier, "Preprimary_ece", "Pre-primary\n/ECE"),
county = fct_relevel(county, c("national", params$county_selection))) %>%
mutate(age_modifier = fct_relevel(age_modifier, c("Secondary",
"Primary",
"Pre-primary\n/ECE"))) %>%
arrange(age_modifier, county) %>%
ggplot(aes(x = value, y = age_modifier, fill = fct_rev(county))) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value), position = position_dodge(width = .9),
hjust = 1, colour = "white", size = 5) +
scale_fill_manual(values = c("#2b54ad", "#5d90d3"),
breaks = c(params$county_selection, "National")) +
theme(legend.position = "top",
panel.background = element_rect("#f4f4f4"),
legend.text = element_text(size = 8),
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 15),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(override.aes = list(size = 0.3)))
}
asal_county_list
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
asal_county_list <- read_csv("./data/counties.csv") %>%  distinct(county) %>% pull()
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total")),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio))
pie_chart <- function(tbl){
tbl %>%
mutate(prop = value / sum(value)) %>%
mutate(label = str_to_title(sex_modifier)) %>%
ggplot(aes(x ="", y = prop, fill = sex_modifier)) +
geom_col(width = 1, colour = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_label(aes(y = prop,
label = paste0(label, "\n",
comma(value),
"\n",
percent(prop, accuracy = .1))),
colour = "white",
position = position_stack(vjust = .5),
size = 5) +
scale_fill_manual(values = c( "#4d6bbd", "#ed6b24")) +
theme(legend.position = "none",
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 30,
colour = "#5370BF"))
}
make_dodged_plot <- function(tbl) {
tbl %>%
mutate(age_modifier = str_to_title(age_modifier),
age_modifier = str_replace_all(age_modifier, "Preprimary_ece", "Pre-primary\n/ECE"),
county = fct_relevel(county, c("national", params$county_selection))) %>%
mutate(age_modifier = fct_relevel(age_modifier, c("Secondary",
"Primary",
"Pre-primary\n/ECE"))) %>%
arrange(age_modifier, county) %>%
ggplot(aes(x = value, y = age_modifier, fill = fct_rev(county))) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value), position = position_dodge(width = .9),
hjust = 1, colour = "white", size = 5) +
scale_fill_manual(values = c("#2b54ad", "#5d90d3"),
breaks = c(params$county_selection, "National")) +
theme(legend.position = "top",
panel.background = element_rect("#f4f4f4"),
legend.text = element_text(size = 8),
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 15),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(override.aes = list(size = 0.3)))
}
counties %>% count(indicator)
counties %>% count(indicator)
mutate(indicator = ifelse(county == "National" & indicator == "Learner to Toilet Ratio in Public Schools"),
"learner_toilet_ratio_recalculated") %>%
filter(county %in% c(params$county_selection, "National")) %>%
filter(str_detect(indicator, "learner_toilet_ratio_recalculated"))
counties %>%
mutate(indicator = ifelse(county == "National" & indicator == "Learner to Toilet Ratio in Public Schools"),
"learner_toilet_ratio_recalculated") %>%
filter(county %in% c(params$county_selection, "National")) %>%
filter(str_detect(indicator, "learner_toilet_ratio_recalculated"))
counties %>%
mutate(indicator = ifelse(county == "National" &
indicator == "Learner to Toilet Ratio in Public Schools",
"learner_toilet_ratio_recalculated", indicator)) %>%
filter(county %in% c(params$county_selection, "National")) %>%
filter(str_detect(indicator, "learner_toilet_ratio_recalculated")) %>%
group_by(age_modifier, county) %>%
summarise(value = sum(value, na.rm = TRUE),
.groups = "drop") %>%
make_dodged_plot() +
labs(x = "Learner-to-Toilet Ratio", y = "",
subtitle = expression(paste("Learner-to-Toilet Rati", "o"^3)),
fill = "") +
theme(plot.margin = margin(10, 0, 0, 0, "pt"))
counties %>% count(age_modifier)
counties %>% filter(is.na(age_modifier))
counties %>% count(age_modifier)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total")),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier))
counties %>%
mutate(indicator = ifelse(county == "National" &
indicator == "Learner to Toilet Ratio in Public Schools",
"learner_toilet_ratio_recalculated", indicator)) %>%
filter(county %in% c(params$county_selection, "National")) %>%
filter(str_detect(indicator, "learner_toilet_ratio_recalculated")) %>%
group_by(age_modifier, county) %>%
summarise(value = sum(value, na.rm = TRUE),
.groups = "drop") %>%
make_dodged_plot() +
labs(x = "Learner-to-Toilet Ratio", y = "",
subtitle = expression(paste("Learner-to-Toilet Rati", "o"^3)),
fill = "") +
theme(plot.margin = margin(10, 0, 0, 0, "pt"))
counties %>%
mutate(indicator = ifelse(county == "National" &
indicator == "Learner to Toilet Ratio in Public Schools",
"learner_toilet_ratio_recalculated", indicator)) %>%
filter(county %in% c(params$county_selection, "National")) %>%
filter(str_detect(indicator, "learner_toilet_ratio_recalculated")) %>%
group_by(age_modifier, county) %>%
summarise(value = sum(value, na.rm = TRUE),
.groups = "drop") %>%
mutate(value = round(value)) %>%
make_dodged_plot() +
labs(x = "Learner-to-Toilet Ratio", y = "",
subtitle = expression(paste("Learner-to-Toilet Rati", "o"^3)),
fill = "") +
theme(plot.margin = margin(10, 0, 0, 0, "pt"))
asal_county_list <- read_csv("./data/counties.csv") %>%  distinct(county) %>% pull()
for (i in asal_county_list)
asal_county_list <- read_csv("./data/counties.csv") %>%  distinct(county) %>% pull()
rmarkdown::render(input = "chart_generator.Rmd",
params = list(id = i),
output_format = "html",
output_file = paste0("county_profile_", i, ".html"))
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(id = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = county_selection = i,
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = county_selection = i,
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
list(county_selection = i)
asal_county_list <- read_csv("./data/counties.csv") %>%  distinct(county) %>% filter(county != "National") %>% pull()
asal_county_list
asal_county_list <- read_csv("./data/counties.csv") %>%  distinct(county) %>% filter(county != "national") %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
source("C:/Users/seanywng/Documents/R/kenya_education_county_profiles/county_profile_loop.R", echo=TRUE)
asal_county_list
---
output:
flexdashboard::flex_dashboard:
logo: UNICEF-logo-small.png
orientation: rows
vertical_layout: fill
self_contained: true
params:
county_selection: "Tharaka Nithi"
---
counties %>%
filter(county == params$county_selection)
counties %>% count(counties)
counties %>% count(county)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
distinct(county) %>% pull()
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list
read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National")
read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county)
read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
library(flexdashboard)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_format = "flex_dashboard",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
flex_dashboard(theme=simplex),
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
rmarkdown::render(input = "chart_generator.Rmd",
flex_dashboard(),
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
flex_dashboard(),
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
flex_dashboard(),
params = list(county_selection = i),
output_format = "html_document",
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
