ggplot(aes(x = pc, y = fct_relevel(county, -ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE))
ooc_total_sort_order <- ooc_total %>%
group_by(county) %>%
summarise(pc = mean(pc)) %>%
arrange(pc) %>%
pull(county)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE))
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
psition = position_dodge(width = .9)) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_fill_continuous(labels = percent)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
psition = position_dodge(width = .9)) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9)) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9),
colour = "white",
hjust = "inward",
size = 5) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9),
colour = "grey50",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent)
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9),
colour = "grey50",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "")
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9),
colour = "grey30",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "")
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "")
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "")
ooc_total %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3,
face = "bold") +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "")
ooc_total %>%
mutate(sex_modifier = str_to_title(sex_modifier)) %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#440154", "#1fa187"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "",
fill = "")
ooc_total %>%
mutate(sex_modifier = str_to_title(sex_modifier)) %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#1fa187", "#440154"),
guide = guide_legend(reverse = TRUE)) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "",
fill = "")
ooc_total %>%
mutate(sex_modifier = str_to_title(sex_modifier)) %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#1fa187", "#440154")) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "",
fill = "")
ooc_total %>%
mutate(sex_modifier = str_to_title(sex_modifier)) %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#1fa187", "#440154")) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "",
fill = "")
counties %>%
filter(indicator %in% c("out_of_school_children"))
counties %>%
filter(indicator %in% c("out_of_school_children") & sex_modifier != "total") %>%
group_by(indicator, sex_modifier, county) %>%
summarise(out_of_school_children_total = sum(value))
ooc_total <- counties %>%
filter(indicator %in% c("out_of_school_children") & sex_modifier != "total") %>%
group_by(indicator, sex_modifier, county) %>%
summarise(out_of_school_children_total = sum(value)) %>%
select(-indicator) %>%
left_join(counties %>%
filter(indicator %in% c("school_age_children") &
sex_modifier != "total") %>%
select(-indicator, -age_modifier) %>%
rename(school_age_children = value),
by = c("sex_modifier", "county")) %>%
mutate(pc = out_of_school_children_total / school_age_children)
ooc_total_sort_order <- ooc_total %>%
group_by(county) %>%
summarise(pc = mean(pc)) %>%
arrange(pc) %>%
pull(county)
ooc_total %>%
mutate(sex_modifier = str_to_title(sex_modifier)) %>%
ggplot(aes(x = pc, y = fct_relevel(county, ooc_total_sort_order), fill = sex_modifier)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = percent(pc, accuracy = .1)),
position = position_dodge(width = .9),
colour = "grey40",
hjust = "inward",
size = 3) +
scale_fill_manual(values = c("#1fa187", "#440154")) +
scale_x_continuous(labels = percent) +
labs(title = "Out-of-school children as % of all school-aged children",
x = "Percent of all school-aged children",
y = "",
fill = "")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(flexdashboard)
library(tidyverse)
library(viridis)
library(readxl)
library(sf)
library(scales)
library(patchwork)
library(janitor)
library(flextable)
library(grid)
library(png)
library(cowplot)
library(ggpubr)
library(ggtext)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
library(rmarkdown)
library(knitr)
library(flexdashboard)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
library(rmarkdown)
library(knitr)
library(flexdashboard)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".pdf"))
}
install.packages("tinytex", )
library(tinytex)
tinytex::install_tinytex()
y
install.packages("psycModel")
html_files <- list.files("docs")
html_files
for (file in html_files){
psycModel::html_to_pdf(file)
}
for (file in html_files){
psycModel::html_to_pdf(file)
}
html_files
# Change the folder to the correct one
# The files will be read from here
html_files <- list.files(path = "C:/Users/seanywng/Documents/R/kenya_education_county_profiles/docs",
recursive = TRUE,
full.names = TRUE)
html_files
for (file in html_files){
psycModel::html_to_pdf(file)
}
# Change the folder to the correct one
# The files will be read from here
html_files <- list.files(path = "C:/Users/seanywng/Documents/R/kenya_education_county_profiles/docs",
recursive = TRUE,
full.names = TRUE)
for (file in html_files){
pagedown::chrome_print(file)
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
library(rmarkdown)
library(knitr)
library(flexdashboard)
library(tinytex)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
library(tidyverse)
library(knitr)
library(flexdashboard)
library(tinytex)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
library(rmarkdown)
library(tidyverse)
library(knitr)
library(flexdashboard)
library(tinytex)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(flexdashboard)
library(tidyverse)
library(viridis)
library(readxl)
library(sf)
library(scales)
library(patchwork)
library(janitor)
library(flextable)
library(grid)
library(png)
library(cowplot)
library(ggpubr)
library(ggtext)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
distinct(county) %>% pull()
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total"))) %>%
# Important -- the old values were wrong
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi"))
pie_chart <- function(tbl){
tbl %>%
mutate(prop = value / sum(value)) %>%
mutate(label = str_to_title(sex_modifier)) %>%
ggplot(aes(x ="", y = prop, fill = sex_modifier)) +
geom_col(width = 1, colour = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_label(aes(y = prop,
label = paste0(label, "\n",
comma(value),
"\n",
percent(prop, accuracy = .1))),
colour = "white",
position = position_stack(vjust = .5),
size = 5) +
scale_fill_manual(values = c( "#4d6bbd", "#ed6b24")) +
theme(legend.position = "none",
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 30,
colour = "#5370BF"))
}
make_dodged_plot <- function(tbl) {
tbl %>%
mutate(age_modifier = str_to_title(age_modifier),
age_modifier = str_replace_all(age_modifier, "Preprimary_ece", "Pre-primary\n/ECE"),
county = fct_relevel(county, c("national", params$county_selection))) %>%
mutate(age_modifier = fct_relevel(age_modifier, c("Secondary",
"Primary",
"Pre-primary\n/ECE"))) %>%
arrange(age_modifier, county) %>%
ggplot(aes(x = value, y = age_modifier, fill = fct_rev(county))) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value), position = position_dodge(width = .9),
hjust = 1, colour = "white", size = 5) +
scale_fill_manual(values = c("#2b54ad", "#5d90d3"),
breaks = c(params$county_selection, "National")) +
theme(legend.position = "top",
panel.background = element_rect("#f4f4f4"),
legend.text = element_text(size = 8),
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 15),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(override.aes = list(size = 0.3)))
}
counties %>% write_csv("./data/counties_complete.csv")
