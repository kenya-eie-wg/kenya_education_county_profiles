read_table(21),
read_table(22),
read_table(23),
) %>%
distinct(indicator, value, sex_modifier, age_modifier, county)
county_name_national_averages <- (read_xlsx("./data/county_profiles_raw.xlsx",
sheet = 1) %>%
names())[1] %>%
{str_replace_all(., " County- Education Profile", "")}
national_averages <- read_xlsx("./data/county_profiles_raw.xlsx",
sheet = 1, skip = 14) %>%
slice(1:27) %>%
setNames(
c("indicator",
"preprimary_ece_female",
"preprimary_ece_male",
"preprimary_ece_total",
"primary_female",
"primary_male",
"primary_total",
"secondary_female",
"secondary_male",
"secondary_total",
"national_average")
) %>%
select(indicator, national_average) %>%
fill(indicator) %>%
naniar::replace_with_na(list(national_average = "NA")) %>%
filter(!is.na(national_average)) %>%
mutate_at(vars(indicator), ~ str_trim(str_squish(.))) %>%
mutate_at(vars(indicator),
~ gsub("\\[.*?\\]", "", .)) %>%
mutate(national_average = str_replace_all(national_average, "\\(|\\)", "")) %>%
mutate(value_temp = national_average) %>%
separate_rows(national_average, sep = ",") %>%
filter(national_average != "") %>%
mutate(age_modifier = case_when(str_detect(national_average, "PP") ~ "preprimary_ece",
str_detect(national_average, "P") ~ "primary",
str_detect(national_average, "S:|S.:") ~ "secondary",
str_detect(indicator, "Transition Rate") ~ "secondary",
TRUE ~ NA_character_),
sex_modifier = case_when(str_detect(national_average, "B:") ~ "male",
str_detect(national_average, "G:") ~ "female",
str_detect(national_average, "T:") ~ "total",
TRUE ~ NA_character_)) %>%
mutate(value_temp = str_sub(str_remove_all(value_temp, ","), start = 5L),
value = case_when(indicator == "Number of education Institutions (Public & Private)" &
!is.na(age_modifier) ~ parse_number(value_temp),
national_average == "PP.: B: 111.5" ~ 111.5,
national_average == "PP.: B: 40" ~ 40,
TRUE ~ parse_number(national_average))) %>%
filter(value %out% c(652, 464, 390)) %>%
fill(age_modifier) %>%
select(-national_average, -value_temp) %>%
rbind(
read_xlsx("./data/county_profiles_raw.xlsx",
sheet = 1, skip = 7) %>%
slice(4) %>%
clean_names() %>%
rename(indicator = child_protection_indicator_4,
value = percentage) %>%
select(where(not_all_na)) %>%
mutate(sex_modifier = "female",
age_modifier = "total",
indicator = str_remove(indicator,
paste0(" in ", county_name_national_averages, " County")),
value = as.numeric(value))
) %>%
mutate(county = "national")
counties_temp <- rbind(national_averages, county_clean)
counties_temp %>%
mutate(county = ifelse(county == "Taita Traveta", "Taita Taveta", county)) %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total"))) %>%
# Important -- the old values were wrong
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated",
county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county),
sex_modifier = recode(sex_modifier,
"boys" = "male",
"girls" = "female")) %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
write_csv("./data/counties.csv")
counties <- read_csv("./data/counties.csv")
counties %>% filter(indicator == "learner_toilet_ratio_recalculated")
counties %>% count(county)
read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated",
county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county),
sex_modifier = recode(sex_modifier,
"boys" = "male",
"girls" = "female")) %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio) %>%
count(county)
learner_toilet_ratios
learner_toilet_ratios %>% count(county)
read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
mutate(county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county)) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated"),
read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
mutate(county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county)) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated",
sex_modifier = recode(sex_modifier,
"boys" = "male",
"girls" = "female")) %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio) %>%
count(county)
counties_temp <- rbind(national_averages, county_clean)
counties_temp %>%
mutate(county = ifelse(county == "Taita Traveta", "Taita Taveta", county)) %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total"))) %>%
# Important -- the old values were wrong
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
mutate(county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county)) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated",
county = ifelse(county == "Tharaka Nithi",
"Tharaka-Nithi",
county),
sex_modifier = recode(sex_modifier,
"boys" = "male",
"girls" = "female")) %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi")) %>%
write_csv("./data/counties.csv")
counties <- read_csv("./data/counties.csv")
counties %>% count(county)
counties %>% filter(county == "Tharaka-Nithi")
counties %>% count(county)
library(rmarkdown)
library(tidyverse)
library(rmarkdown)
library(tidyverse)
library(knitr)
library(flexdashboard)
library(tinytex)
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National")) %>%
filter(county != "National") %>%
distinct(county) %>% pull()
for (i in asal_county_list) {
rmarkdown::render(input = "chart_generator.Rmd",
params = list(county_selection = i),
output_file = paste0("county_profile_", i, ".html"))
}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(flexdashboard)
library(tidyverse)
library(viridis)
library(readxl)
library(sf)
library(scales)
library(patchwork)
library(janitor)
library(flextable)
library(grid)
library(png)
library(cowplot)
library(ggpubr)
library(ggtext)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
asal_county_list <- read_csv("./data/counties.csv") %>%
mutate(county = recode(county,
"national" = "National")) %>%
distinct(county) %>% pull()
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total"))) %>%
# Important -- the old values were wrong
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv") %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi"))
pie_chart <- function(tbl){
tbl %>%
mutate(prop = value / sum(value)) %>%
mutate(label = str_to_title(sex_modifier)) %>%
ggplot(aes(x ="", y = prop, fill = sex_modifier)) +
geom_col(width = 1, colour = "white") +
coord_polar("y", start = 0) +
theme_void() +
geom_label(aes(y = prop,
label = paste0(label, "\n",
comma(value),
"\n",
percent(prop, accuracy = .1))),
colour = "white",
position = position_stack(vjust = .5),
size = 5) +
scale_fill_manual(values = c( "#4d6bbd", "#ed6b24")) +
theme(legend.position = "none",
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 30,
colour = "#5370BF"))
}
make_dodged_plot <- function(tbl) {
tbl %>%
mutate(age_modifier = str_to_title(age_modifier),
age_modifier = str_replace_all(age_modifier, "Preprimary_ece", "Pre-primary\n/ECE"),
county = fct_relevel(county, c("national", params$county_selection))) %>%
mutate(age_modifier = fct_relevel(age_modifier, c("Secondary",
"Primary",
"Pre-primary\n/ECE"))) %>%
arrange(age_modifier, county) %>%
ggplot(aes(x = value, y = age_modifier, fill = fct_rev(county))) +
geom_col(position = position_dodge()) +
geom_text(aes(label = value), position = position_dodge(width = .9),
hjust = 1, colour = "white", size = 5) +
scale_fill_manual(values = c("#2b54ad", "#5d90d3"),
breaks = c(params$county_selection, "National")) +
theme(legend.position = "top",
panel.background = element_rect("#f4f4f4"),
legend.text = element_text(size = 8),
plot.title = element_text(size = 15),
plot.subtitle = element_text(size = 15),
axis.text.y = element_text(size = 10)) +
guides(fill = guide_legend(override.aes = list(size = 0.3)))
}
# counties %>% write_csv("./data/counties_complete.csv")
counties %>% glimpse()
counties %>%
filter(county == "Isiolo")
counties %>%
filter(county == "Isiolo" & str_detect(indicator, "Dropout"))
counties %>%
filter(county == "Isiolo" & str_detect(indicator, "Absent"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE,  fig.retina = 2)
library(tidyverse)
library(viridis)
library(readxl)
library(sf)
library(scales)
library(patchwork)
library(janitor)
library(flextable)
library(tidytext)
library(grid)
library(ggrepel)
theme_set(theme_light())
# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)
# disabling scientific notation
options(scipen = 100)
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
asal_county_list <- read_csv("./data/counties.csv",
show_col_types = FALSE) %>% distinct(county) %>% pull()
counties <- read_csv("./data/counties.csv",
show_col_types = FALSE) %>%
mutate(sex_modifier = fct_relevel(sex_modifier, c("male", "female", "total"))) %>%
# Important -- the old values were wrong
rbind(read_csv("./data/learner_toilet_ratio_recalculated.csv",
show_col_types = FALSE) %>%
filter(county %in% c(asal_county_list)) %>%
mutate(indicator = "learner_toilet_ratio_recalculated") %>%
select(indicator, county, age_modifier, sex_modifier, value = learner_toilet_ratio)) %>%
mutate(age_modifier = ifelse(age_modifier == "preprimary",
"preprimary_ece",
age_modifier),
county = recode(county,
"national" = "National",
"Tharaka Nithi" = "Tharaka-Nithi"))
locations <- read_xlsx("./data/ken_adminboundaries_tabulardata.xlsx",
sheet = "ADM1") %>%
clean_names()
pcode1_shape <-
sf::st_read("./data/ken_adm_iebc_20191031_shp/ken_admbnda_adm1_iebc_20191031.shp",
quiet = TRUE) %>%
clean_names()
asal_county_list <- read_csv("./data/counties.csv",
show_col_types = FALSE) %>% distinct(county) %>% pull()
counties <- read_csv("./data/counties.csv")
counties %>% count(indicator)
counties %>% count(indicator, sex_modifier, age_modifier)
counties %>% filter(indicator == "Gender Parity Index" & is.na(sex_modifier))
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = ifelse(indicator == "Gender Parity Index" & county == "National",
"total",
sex_modifier))
counties %>% count(indicator, sex_modifier, age_modifier)
counties %>% filter(indicator == "Learner-Classroom Ratio in Public Schools" & is.na(sex_modifier))
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = ifelse(
indicator == "Gender Parity Index|Learner-Classroom Ratio in Public Schools" &
county == "National",
"total",
sex_modifier))
counties %>% count(indicator, sex_modifier, age_modifier)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = ifelse(
indicator == "Gender Parity Index|Learner-Classroom Ratio in Public Schools" &
county == "National",
"total",
sex_modifier))
counties %>% count(indicator, sex_modifier, age_modifier)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = ifelse(
indicator == "Gender Parity Index" &
county == "National",
"total",
sex_modifier))
counties %>% count(indicator, sex_modifier, age_modifier)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = case_when(
indicator == "Gender Parity Index" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner to teacher Ratio in Public Schools" & county == "National" ~ ,"total",
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = case_when(
indicator == "Gender Parity Index" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner to teacher Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
TRUE ~ sex_modifier
))
counties %>% count(indicator, sex_modifier, age_modifier)
counties %>%
mutate(sub_indicator = paste0(indicator, " ", sex_modifier, " ", age_modifier))
counties %>%
mutate(sub_indicator = paste0(indicator, " ", sex_modifier, " ", age_modifier)) %>%
count(sub_indicator)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = case_when(
indicator == "Gender Parity Index" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner to teacher Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Number of education Institutions (Public & Private)" ~ NA_character_,
TRUE ~ sex_modifier
))
counties %>%
mutate(sub_indicator = paste0(indicator, " ", sex_modifier, " ", age_modifier)) %>%
count(sub_indicator)
counties %>%
mutate(sub_indicator = paste0(indicator, " ", sex_modifier, " ", age_modifier),
sub_indicator = str_replace_all(sub_indicator, "NA", "")) %>%
count(sub_indicator)
counties <- read_csv("./data/counties.csv") %>%
mutate(sex_modifier = case_when(
indicator == "Gender Parity Index" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner to teacher Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Learner-Classroom Ratio in Public Schools" & county == "National" ~ "total",
indicator == "Number of education Institutions (Public & Private)" ~ NA_character_,
TRUE ~ sex_modifier
)) %>%
mutate(sub_indicator = paste0(indicator, " ", sex_modifier, " ", age_modifier),
sub_indicator = str_replace_all(sub_indicator, "NA", ""))
counties %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total")
counties %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = county)) +
geom_col()
counties %>%
group_by(sub_indicator)
counties %>%
group_by(sub_indicator) %>%
summarise(mean = mean(value, na.rm = TRUE))
counties %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = fct_reorder(county, value))) +
geom_col()
counties %>%
%>%
counties %>%
mutate(value = ifelse(sub_indicator %in%
c("Percentage of Teenage Pregnancy for girls/women aged 15-19 yrs who have ever been pregnant female total",
"GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total",
"GBV: Percentage of girls/women who have experienced physical violence since age 15 female total"),
value * 100,
value)) %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = fct_reorder(county, value), fill = value)) +
geom_col() +
scale_fill_viridis()
counties %>%
mutate(value = ifelse(sub_indicator %in%
c("Percentage of Teenage Pregnancy for girls/women aged 15-19 yrs who have ever been pregnant female total",
"GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total",
"GBV: Percentage of girls/women who have experienced physical violence since age 15 female total"),
value * 100,
value)) %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = fct_reorder(county, value), fill = value)) +
geom_col() +
scale_fill_viridis() +
labs(x = "Value",
y = "",
title = paste0(indicator))
counties %>%
mutate(value = ifelse(sub_indicator %in%
c("Percentage of Teenage Pregnancy for girls/women aged 15-19 yrs who have ever been pregnant female total",
"GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total",
"GBV: Percentage of girls/women who have experienced physical violence since age 15 female total"),
value * 100,
value)) %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = fct_reorder(county, value), fill = value)) +
geom_col() +
scale_fill_viridis() +
labs(x = "Value",
y = "",
title = paste0(sub_indicator))
counties %>%
mutate(value = ifelse(sub_indicator %in%
c("Percentage of Teenage Pregnancy for girls/women aged 15-19 yrs who have ever been pregnant female total",
"GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total",
"GBV: Percentage of girls/women who have experienced physical violence since age 15 female total"),
value * 100,
value)) %>%
filter(sub_indicator == "GBV: Percentage of girls/women aged 15-49 yrs who have ever experienced sexual violence female total") %>%
ggplot(aes(x = value, y = fct_reorder(county, value), fill = value)) +
geom_col() +
scale_fill_viridis() +
labs(x = "Value",
y = "",
title = paste0(sub_indicator))
counties %>% count(indicator)
