---
title: "Untitled"
output: html_document
date: '2023-06-20'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(readxl)
library(janitor)

theme_set(theme_light())

# Hopefully this allows the DT to show up
options(htmltools.preserve.raw = FALSE)

# disabling scientific notation
options(scipen = 100)

`%out%` <- Negate(`%in%`)

# function for transposing df
transpose_df <- function(df) {
  t_df <- data.table::transpose(df)
  colnames(t_df) <- rownames(df)
  rownames(t_df) <- colnames(df)
  t_df <- t_df %>%
    tibble::rownames_to_column(.data = .) %>%
    tibble::as_tibble(.)
  return(t_df)
}

# scaling functions 
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

#mode function 
mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

not_all_na <- function(x) any(!is.na(x))
not_any_na <- function(x) all(!is.na(x))
```



```{r}
tab1 <- read_xlsx("./data/try_this_one.xlsx", 
                  sheet = 1, skip = 3) %>% 
  setNames(
    c("county_population_females", 
  "county_population_males", 
  "county_population_total", 
  "school_age_children_females", 
  "school_age_children_males", 
  "school_age_children_total", 
  "out_of_school_preprimary_ece_females", 
  "out_of_school_preprimary_ece_males", 
  "out_of_school_preprimary_ece_total",
  "out_of_school_primary_females", 
  "out_of_school_primary_males", 
  "out_of_school_primary_total", 
  "out_of_school_secondary_females", 
  "out_of_school_secondary_males", 
  "out_of_school_secondary_total"
  ))%>% 
    slice(4) %>% 
  transpose_df() %>% 
  setNames(c("indicator", "value")) %>% 
  mutate(sex_modifier = case_when(str_detect(indicator, "female") ~ "female", 
                                      str_detect(indicator, "male") ~ "male", 
                                      str_detect(indicator, "total") ~ "total", 
                                      TRUE ~ "total"), 
         age_modifier = case_when(str_detect(indicator, "preprimary_ece") ~ "preprimary_ece",
                                  str_detect(indicator, "primary") ~ "primary",
                                  str_detect(indicator, "secondary") ~ "secondary", 
                                  TRUE ~ "total"))  %>% 
  mutate(geography = ifelse(str_detect(age_modifier, "national"), "national", "county")) %>% 
  select(indicator, sex_modifier, age_modifier, value, geography)

```


```{r}



tab3 <- read_xlsx("./data/try_this_one.xlsx", 
                  sheet = 1, skip = 9) %>% 
  slice(1:4) %>%
  clean_names() %>% 
  rename(indicator = child_protection_indicator_3, 
         value = percentage) %>% 
  select(where(not_all_na)) %>% 
  mutate(sex_modifier = "female", 
         age_modifier = "total") %>% 
  mutate(geography = ifelse(str_detect(age_modifier, "national"), "national", "county")) 
```


```{r}
tab2a <- read_xlsx("./data/try_this_one.xlsx", 
                  sheet = 1, skip = 14) %>% 
  slice(1:19) %>%  
  setNames(
    c("indicator", 
  "preprimary_ece_female", 
  "preprimary_ece_male", 
  "preprimary_ece_total", 
  "primary_female", 
  "primary_male", 
  "primary_total", 
  "secondary_female", 
  "secondary_male", 
  "secondary_total", 
  "national_average")
  ) %>% 
  filter(!is.na(indicator)) %>% 
  mutate_at(vars(indicator, preprimary_ece_total), 
            ~ gsub("\\[.*?\\]", "", .)) %>% 
    pivot_longer(cols = c(preprimary_ece_female:national_average), 
                 names_to = "modifier", 
                 values_to = "value") %>% 
  group_by(indicator) %>%  
  tidyr::fill(value) %>% 
  filter(
    indicator %in% c("Number of education Institutions", 
                     "Gender Parity Index", 
                     "Learner to teacher Ratio", 
                     "Learner-Classroom Ratio", 
                     "Percentage of students with no access to improved water source")) %>% 
  mutate(sex_modifier = "total", 
         modifier = str_remove_all(modifier, "_total")) %>% 
  rename(age_modifier = modifier) %>% 
  naniar::replace_with_na(list(value = "NA")) %>% 
  filter(!str_detect(age_modifier, "male")) %>% 
  select(indicator, sex_modifier, age_modifier, value) %>% 
  mutate(value = strsplit(as.character(value), ",")) %>% 
  unnest(value) %>% 
  mutate(geography = ifelse(str_detect(age_modifier, "national"), "national", "county")) %>% 
  mutate(age_modifier = case_when(str_detect(value, "PP") ~ "preprimary_ece",
                                  str_detect(value, "P") ~ "primary", 
                                  str_detect(value, "S:") ~ "secondary", 
                                  TRUE ~ age_modifier))


```

```{r}
tab2b <- read_xlsx("./data/try_this_one.xlsx", 
                  sheet = 1, skip = 14) %>% 
  slice(1:19) %>% 
  setNames(
    c("indicator", 
  "preprimary_ece_female", 
  "preprimary_ece_male", 
  "preprimary_ece_total", 
  "primary_female", 
  "primary_male", 
  "primary_total", 
  "secondary_female", 
  "secondary_male", 
  "secondary_total", 
  "national_average")
  ) %>% 
  filter(!is.na(indicator) | !is.na(national_average)) %>% 
  fill(indicator) %>% 
  mutate_at(vars(indicator, preprimary_ece_total), 
            ~ gsub("\\[.*?\\]", "", .)) %>% 
    pivot_longer(cols = c(preprimary_ece_female:national_average), 
                 names_to = "modifier", 
                 values_to = "value") %>% 
  group_by(indicator) %>%  
  tidyr::fill(value) %>% 
  filter(
    indicator %out% c("Number of education Institutions", 
                     "Gender Parity Index", 
                     "Learner to teacher Ratio", 
                     "Learner-Classroom Ratio", 
                     "Percentage of students with no access to improved water source")) %>% 
  mutate(sex_modifier = case_when(str_detect(modifier, "female") ~ "female", 
                                      str_detect(modifier, "male") ~ "male", 
                                      str_detect(modifier, "total") ~ "total",
                                  TRUE ~ "total"), 
         age_modifier = case_when(str_detect(modifier, "preprimary_ece") ~ "preprimary_ece", 
                                  str_detect(modifier, "primary") ~ "primary",
                                  str_detect(modifier, "secondary") ~ "secondary",
                                  str_detect(modifier, "national") ~ "national_average", 
                                        TRUE ~ "total")) %>% 
  naniar::replace_with_na(list(value = "NA")) %>%  
  # Figure out later how to deal with the duplications 
  filter(!str_detect(value, ":") | age_modifier == "national_average") %>% 
  mutate(indicator = 
           case_when(
             str_detect(indicator, "Enrolment") & 
               !str_detect(indicator, "Rate") & 
               row_number() <=10 ~ "Enrolment 2022 Term 2",
             str_detect(indicator, "Enrolment") & 
               !str_detect(indicator, "Rate") & 
               row_number() >= 11 & 
               row_number() < 22 ~ "Enrolment 2022 Term 3", 
             TRUE ~ indicator)) %>% 
  mutate(geography = ifelse(str_detect(age_modifier, "national"), "national", "county")) %>% 
  select(indicator, value, age_modifier, sex_modifier, geography) 
```



```{r}

county_name <- (read_xlsx("./data/try_this_one.xlsx", 
                         sheet = 1) %>% 
  names())[1] %>% 
  {str_replace_all(., " County- Education Profile", "")}


county <- rbind(tab1, 
                tab2a, 
                tab2b, 
                tab3) %>% 
  mutate(age_modifier = case_when(str_detect(value, "PP") ~ "preprimary_ece", 
                                  str_detect(value, "P") ~ "primary", 
                                  str_detect(value, "S:") ~ "secondary", 
                                  TRUE ~ age_modifier)) %>% 
  mutate(all_values = value, 
         value = parse_number(value), 
         county = ifelse(str_detect(age_modifier, "national"), "National", 
                         paste0(county_name))) %>% 
  mutate(indicator = recode(indicator, 
                            "Number of education Institutions" = "Number of education institutions")) %>% 
  mutate(indicator = case_when(
    str_detect(indicator, "county_population") ~ "County Population", 
    str_detect(indicator, "out_of_school") ~ "Out-of-school children", 
    str_detect(indicator, "school_age_children") ~ "School-age children", 
    TRUE ~ indicator
   ))

county %>% write_csv(paste0(
  "./data/", 
  str_to_lower(county_name), 
  "_county_", 
  format(Sys.Date(), "%Y%m%d"),
  ".csv"))

```
